@ECHO OFF
IF NOT DEFINED WATCOM (
	ECHO No OpenWatcom toolchain specified - set path in WATCOM environment variable.
	EXIT /B 1
)

PATH %WATCOM%\BINNT64;%WATCOM%\BINNT;%PATH%
SET EDPATH=%WATCOM%\EDDAT
SET INCLUDE=%WATCOM%\H;%WATCOM%\H\NT;%WATCOM%\H\NT\DIRECTX;%WATCOM%\H\NT\DDK

SET SCRIPTDIR=%~dp0

REM Clear out the linker file
ECHO.>bootstrap.lk1

SET failures=0

CALL :CompileFile %SCRIPTDIR%\ , main
CALL :CompileFile %SCRIPTDIR%\ , bstfile
CALL :CompileFile %SCRIPTDIR%\ , bstparse
CALL :CompileFile %SCRIPTDIR%\ , path
CALL :CompileFile %SCRIPTDIR%\ , options
CALL :CompileFile %SCRIPTDIR%\ , mkscript
CALL :CompileFile %SCRIPTDIR%\ , platform

IF %failures% NEQ 0 (
	echo %failures% files failed to compile.
	exit /B 1
)

echo Linking
wlink name bootstrap d all sys nt op m op maxe=25 op q op symf @bootstrap.lk1

IF %ERRORLEVEL% NEQ 0 (
	echo Linking was unsuccessful
	exit /B 1
)

ECHO Done
GOTO :EOF

:CompileFile
ECHO Recording %~2.obj in linker file
ECHO FIL %~2.obj>>bootstrap.lk1

ECHO Compiling %~2.c

REM These compile options were generated by Open Watcom's ide.exe when building in release mode.
wcc386 "%~1%~2.c" -i="%INCLUDE%" -d__STDC_WANT_LIB_EXT1__=1 -wx -we -e25 -zq -zq -ox -oc -oi -oe20 -6r -bt=nt -fo=.obj -mf

REM For some reason ERRORLEVEL doesn't get set properly on Windows, so we check for a .err file instead.
IF EXIST %~2.err (
	ECHO Compilation was not successful for %~2.c
	SET /a failures=failures+1
)

EXIT /B 0
